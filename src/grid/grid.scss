
/* --------------- */
/* --- 2. Grid --- */
/* --------------- */

@import '../mixins';
@import '../variables';


// --- Mixins

// Create a grid for specified screen size

@mixin grid($size, $gutter) {

    .grid:not(.no-gutter):not(.no-gutter-#{$size}) {
        margin-right: -$gutter / 2;

        > [class*=grid-] {
            padding-bottom: $gutter;
            padding-left: $gutter / 2;
            padding-right: $gutter / 2;
        }
    }


    /* Auto-width */

    .grid-#{$size} {
        flex-basis: 0;
        flex-grow: 1;
    }


    /* Shrink-to-fit */

    .grid-#{$size}-shrink {
        flex: 0 1 auto;
    }


    /* Columns in predefined ad sizes */

    $ad-list: 160 200 300;

    [class*=grid-#{$size}-ad] {
        box-sizing: content-box;
    }

    @each $ad in $ad-list {

        .grid-#{$size}-ad-#{$ad} {
            flex-basis: #{$ad}px;
            width: #{$ad}px;
        }
    }


    /* Columns 5-100 in intervals of 5 + 33, 66 */

    @for $i from 1 through 20 {

        .grid-#{$size}-#{$i * 5} {
            flex: #{$i * 5 + '%'} 0;
            max-width: #{$i * 5 + '%'};
        }
    }

    .grid-#{$size}-16 {
        flex: 16.66666% 0;
        max-width: 16.66666%;
    }

    .grid-#{$size}-33 {
        flex: 33.33333% 0;
        max-width: 33.33333%;
    }

    .grid-#{$size}-66 {
        flex: 66.66666% 0;
        max-width: 66.66666%;
    }


    /* Offsets 5-95 in intervals of 5 + 33, 66 */

    @for $i from 1 through 19 {

        .grid-#{$size}-offset-#{$i * 5} {
            margin-left: #{$i * 5 + '%'};
        }
    }

    .grid-#{$size}-offset-16 {
        margin-left: 16.66666%;
    }

    .grid-#{$size}-offset-33 {
        margin-left: 33.33333%;
    }

    .grid-#{$size}-offset-66 {
        margin-left: 66.66666%;
    }
}


// Alignment classes for specified screen size

@mixin grid-alignment($size) {


    /* Left, center, right */

    .start-#{$size} {
        @include flex-start;
    }

    .center-#{$size} {
        @include flex-center;
    }

    .end-#{$size} {
        @include flex-end;
    }


    /* Top, middle, bottom */

    .top-#{$size} {
        @include flex-top;
    }

    .middle-#{$size} {
        @include flex-middle;
    }

    .bottom-#{$size} {
        @include flex-bottom;
    }
}


// Distribution classes for specified screen size

@mixin grid-distribution($size) {


    /* Around, between */

    .between-#{$size} {
        display: flex;
        justify-content: space-between;
    }

    .around-#{$size} {
        display: flex;
        justify-content: space-around;
    }
}


// Ordering

@mixin grid-ordering($size) {

    .first-#{$size} {
        order: -1;
    }

    .last-#{$size} {
        order: 1;
    }
}


// Gutters

@mixin gutters($size, $gutter) {

    .gutter-bottom {
        margin-bottom: $gutter;
    }

    .gutter-bottom-small {
        margin-bottom: $gutter / 2;
    }

    .gutter-top {
        margin-top: $gutter;
    }

    .gutter-bottom-#{$size} {
        margin-bottom: $gutter;
    }

    .gutter-right-#{$size} {
        margin-right: $gutter;
    }

    .gutter-top-#{$size} {
        margin-top: $gutter;
    }
}


/* Base */

.grid {
    box-sizing: border-box;
    display: flex;
    flex: 1;
    flex-wrap: wrap;
    max-height: 100%;
}

.gutter-right, .gutter-bottom {
    max-width: none;
}

[class*=grid-] {
    box-sizing: border-box;
    flex: 0 0 auto;
    max-width: 100%;
    min-width: 0;
}


/* --- Extra-small; default --- */

@include grid('xs', $gutter-xs);
@include grid-alignment('xs');
@include grid-distribution('xs');
@include grid-ordering('xs');

@media (max-width: $screen-xs-max) {
    @include gutters('xs', $gutter-xs);
}


/* --- Small --- */

@media (min-width: $screen-sm-min) {

    @include grid('sm', $gutter-sm);
    @include grid-alignment('sm');
    @include grid-distribution('sm');
    @include grid-ordering('sm');

    @media (max-width: $screen-sm-max) {
        @include gutters('sm', $gutter-sm);
    }
}


/* --- Medium --- */

@media (min-width: $screen-md-min) {

    @include grid('md', $gutter-md);
    @include grid-alignment('md');
    @include grid-distribution('md');
    @include grid-ordering('md');

    @media (max-width: $screen-md-max) {
        @include gutters('md', $gutter-md);
    }
}


/* --- Large --- */

@media (min-width: $screen-lg-min) {

    @include grid('lg', $gutter-lg);
    @include grid-alignment('lg');
    @include grid-distribution('lg');
    @include grid-ordering('lg');
    @include gutters('lg', $gutter-lg);
}


// OLD GRID

.grid.fixed-width {
    flex: unset;
}

/* --- grid --- */

@media (max-width: $screen-xs-max) {

    .grid-gutters-xs {
        margin-right: -2px;
    }

    .grid-gutters-xs > [class*=grid-] {
        padding-bottom: 2px;
        padding-right: 2px;
    }
}
